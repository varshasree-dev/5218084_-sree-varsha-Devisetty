#include <stdio.h>
#include <stdlib.h>

int main() {
    int n, q;
    scanf("%d %d", &n, &q);
    
    // Create an array of pointers for dynamic subarrays
    int **arr = (int **)malloc(n * sizeof(int *));
    int *sizes = (int *)calloc(n, sizeof(int));  // stores current size of each subarray
    int *capacities = (int *)malloc(n * sizeof(int)); // stores capacity for realloc
    
    for (int i = 0; i < n; i++) {
        arr[i] = NULL;   // initially empty arrays
        capacities[i] = 0;
    }
    
    int lastAnswer = 0;
    
    for (int i = 0; i < q; i++) {
        int type, x, y;
        scanf("%d %d %d", &type, &x, &y);
        int idx = (x ^ lastAnswer) % n; // calculate index
        
        if (type == 1) {
            // Append y to arr[idx]
            if (sizes[idx] == capacities[idx]) {
                capacities[idx] = capacities[idx] == 0 ? 1 : capacities[idx] * 2;
                arr[idx] = (int *)realloc(arr[idx], capacities[idx] * sizeof(int));
            }
            arr[idx][sizes[idx]++] = y;
            
        } else if (type == 2) {
            // Query
            lastAnswer = arr[idx][y % sizes[idx]];
            printf("%d\n", lastAnswer);
        }
    }
    
    // Free allocated memory
    for (int i = 0; i < n; i++) {
        free(arr[i]);
    }
    free(arr);
    free(sizes);
    free(capacities);
    
    return 0;
}
